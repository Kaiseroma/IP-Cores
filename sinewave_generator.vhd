
-- Generated by MATLAB 8.6 and HDL Coder 3.7

LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY sines IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        Out1                              :   OUT   std_logic_vector(9 DOWNTO 0)  -- sfix10_En9
        );
END sines;


ARCHITECTURE rtl OF sines IS

  -- Constants
  CONSTANT C_Sine_Wave_addr_max_val       : unsigned(1 DOWNTO 0) := 
    "10";  -- ufix2

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL Sine_Wave_out1                   : signed(9 DOWNTO 0);  -- sfix10_En9
  SIGNAL subtract_mux_ctrl                : std_logic;
  SIGNAL negate_mux_ctrl                  : std_logic;
  SIGNAL subtract_mux_ctrl_inv            : std_logic;
  SIGNAL negate_mux_ctrl_inv              : std_logic;
  SIGNAL address_cnt                      : std_logic;
  SIGNAL phase_1                          : std_logic;
  SIGNAL LUT_length_minus_addr            : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL add_temp                         : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL LUT_addr_in                      : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL address_cnt_fullwidth            : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL LUT_output                       : signed(9 DOWNTO 0);  -- sfix10_En9
  SIGNAL LUT_output_neg                   : signed(9 DOWNTO 0);  -- sfix10_En9
  SIGNAL unaryminus_temp                  : signed(10 DOWNTO 0);  -- sfix11_En9

BEGIN
  enb <= clk_enable;

-- ADDRESS COUNTER
  Sine_Wave_addrcnt_temp_process1 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      address_cnt <= '0';
    ELSIF clk'event AND clk = '1' THEN
      IF enb = '1' THEN
          address_cnt <= NOT address_cnt;
      END IF;
    END IF; 
  END PROCESS Sine_Wave_addrcnt_temp_process1;

  phase_1 <= '1' WHEN address_cnt = '1' AND enb = '1' ELSE '0';

-- SUBTRACTION MUX TOGGLE
  subtract_mux_ctrl_inv <= NOT(subtract_mux_ctrl);

  Sine_Wave_tog_temp_process2 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      subtract_mux_ctrl <= '0';
    ELSIF clk'event AND clk = '1' THEN
      IF ((enb = '1') AND(phase_1 = '1')) THEN
        subtract_mux_ctrl <= subtract_mux_ctrl_inv;
      END IF;
    END IF; 
  END PROCESS Sine_Wave_tog_temp_process2;

-- NEGATION MUX TOGGLE
  negate_mux_ctrl_inv <= NOT(negate_mux_ctrl);

  Sine_Wave_tog_temp_process3 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      negate_mux_ctrl <= '0';
    ELSIF clk'event AND clk = '1' THEN
      IF ((enb = '1') AND(phase_1 = '1') AND(subtract_mux_ctrl = '1')) THEN
        negate_mux_ctrl <= negate_mux_ctrl_inv;
      END IF;
    END IF; 
  END PROCESS Sine_Wave_tog_temp_process3;

-- LOOKUPTABLE ADDRESS GENERATION
  add_temp <= resize(C_Sine_Wave_addr_max_val, 3) - unsigned'("001") WHEN address_cnt = '1' ELSE
              resize(C_Sine_Wave_addr_max_val, 3);

  LUT_length_minus_addr <= add_temp(1 DOWNTO 0);

  address_cnt_fullwidth <= resize("0" & address_cnt, 2);

  LUT_addr_in <= address_cnt_fullwidth WHEN ( subtract_mux_ctrl = '0' ) ELSE
                 LUT_length_minus_addr;

-- QUARTER WAVE LOOKUP TABLE
  PROCESS(LUT_addr_in)
  BEGIN
    CASE LUT_addr_in IS
      WHEN "00" => LUT_output <= "0000000000";
      WHEN "01" => LUT_output <= "0111111111";
      WHEN "10" => LUT_output <= "0111111111";
      WHEN OTHERS => LUT_output <= "0111111111";
    END CASE;
  END PROCESS;

  unaryminus_temp <= ('0' & LUT_output) WHEN LUT_output = "1000000000"
      ELSE -resize(LUT_output,11);
  LUT_output_neg <= unaryminus_temp(9 DOWNTO 0);

  Sine_Wave_out1 <= LUT_output WHEN ( negate_mux_ctrl = '0' ) ELSE
                    LUT_output_neg;


  Out1 <= std_logic_vector(Sine_Wave_out1);

END rtl;

